name: Deploy to ACA (dev)

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  RESOURCE_GROUP1: talos-dev-sea-rg
  CONTAINER_APP_NAME1: talos-dev-sea-aca
  CONTAINER_APP_ENV_NAME1: shared-dev-sea-cae
  
  ACR_NAME: sharedDevSeaAcr
  ACR_LOGIN: shareddevseaacr
  IMAGE_NAME: hello-world-app
  IMAGE_LATEST: shareddevseaacr.azurecr.io/hello-world-app:latest

jobs:
  build-and-deploy:
    environment: dev

    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry & Build and Push Docker Image
        run: |
          az acr login --name ${{ env.ACR_NAME }}
          IMAGE_NAME=${{ env.ACR_LOGIN }}.azurecr.io/${{ env.CONTAINER_APP_NAME1 }}:${{ github.sha }}
          docker build -t $IMAGE_NAME -f Dockerfile.linux .
          docker push $IMAGE_NAME

      - name: Deploy to Azure Container Apps Test1
        uses: azure/container-apps-deploy-action@v1
        with:
          containerAppName: ${{ env.CONTAINER_APP_NAME1 }}
          resourceGroup: ${{ env.RESOURCE_GROUP1 }}
          imageToDeploy: ${{ env.ACR_LOGIN }}.azurecr.io/${{ env.CONTAINER_APP_NAME1 }}:${{ github.sha }}
          containerAppEnvironment: ${{ env.CONTAINER_APP_ENV_NAME1 }}